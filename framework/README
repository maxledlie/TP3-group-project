The framework for the applicaton is now set up.

The board is represented by a 2-dimensioanal vector of tuples containing doubles and booleans:
 
  std::vector<std::vector<std::tuple<double,bool>>>;
  
The function bmpInitialise(string bmp_file_name) initialises a board according to the "instructions" provided in a .bmp file.
Each pixel in a .bmp file represents one cell in the board. If the pixel is...

RED: +5V
GREEN: 0V
BLUE: -5V.

The program recognises a pixel as RED   if its RGB colour value is 255 0   0
                                  GREEN if its RGB colour value is 0   255 0
                                  BLUE  if its RGB colour value is 0   0   255
                                  
You can easily set RGB to these values when selecting a new colour in Paint, and I assume in similar program too.

I would provide sample .bmp files but I'm having some trouble figuring out how to upload images to GitHub. Hopefully should have some up soon.

The rest of the program should be self-explanatory.
  
TODO:
- Write functions for faster and more accurate algorithms than the Jacobi method.
- Implement convergence detection
